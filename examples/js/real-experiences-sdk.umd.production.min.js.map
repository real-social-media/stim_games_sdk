{"version":3,"file":"real-experiences-sdk.umd.production.min.js","sources":["../src/IframeEmmiter.ts","../src/actions.ts","../src/GamesSDK.ts","../src/index.ts"],"sourcesContent":["import { IframeAction } from \"./actions\"\n\nexport interface EmmiterInterface {\n\tsend(action: IframeAction): void\n\trequest(action: IframeAction): Promise<IframeAction | never>\n}\n\ntype PromiseQueue = {\n\t[key: string]: Array<Promise<IframeAction>>\n}\n\nclass IframeEmmiter implements EmmiterInterface {\n\tprivate target: Window\n\tprivate requests: PromiseQueue = {}\n\n\tconstructor(target: Window) {\n\t\tthis.target = target\n\t\twindow.addEventListener(\"message\", this.response.bind(this))\n\t}\n\n\tprivate response(event: MessageEvent) {\n\t\tconst action: IframeAction = event.data\n\t\tconst requests = this.requests[action.type]\n\n\t\tif (requests) {\n\t\t\tconst hasError = action?.error\n\n\t\t\t// @ts-ignore\n\t\t\trequests.forEach(({ resolve, reject }) => {\n\t\t\t\tif (hasError) {\n\t\t\t\t\treject(action.error)\n\t\t\t\t} else {\n\t\t\t\t\tresolve(action)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis.requests[action.type] = []\n\t\t}\n\t}\n\n\tsend(action: IframeAction): void {\n\t\tthis.target.postMessage(action, \"*\")\n\t}\n\n\trequest(action: IframeAction): Promise<IframeAction | never> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (!this.requests[action.type]) {\n\t\t\t\tthis.requests[action.type] = []\n\t\t\t}\n\n\t\t\t// @ts-ignore\n\t\t\tthis.requests[action.type].push({ resolve, reject })\n\t\t\tthis.send(action)\n\t\t})\n\t}\n}\n\nexport default IframeEmmiter\n","import { PostID } from \"./types\"\n\nexport enum IframeActionKind {\n\tAuthorize = \"@gameSDK:authorize\",\n\tRequestEmail = \"@gameSDK:requestEmail\",\n\tPurchase = \"@gameSDK:purchase\",\n\tCheckPurchases = \"@gameSDK:checkPurchases\",\n}\n\nexport type IframeAction = {\n\ttype: string\n\tpayload?: any\n\terror?: string\n}\n\nexport const authorize = (): IframeAction => ({\n\ttype: IframeActionKind.Authorize,\n})\n\nexport const requestEmail = (): IframeAction => ({\n\ttype: IframeActionKind.RequestEmail,\n})\n\nexport const purchase = (sku: PostID): IframeAction => ({\n\ttype: IframeActionKind.Purchase,\n\tpayload: sku,\n})\n\nexport const checkPurchases = (skus: Array<PostID>): IframeAction => ({\n\ttype: IframeActionKind.CheckPurchases,\n\tpayload: skus,\n})\n","import { EmmiterInterface } from \"./IframeEmmiter\"\nimport { UserID, UserEmail, PostID } from \"./types\"\nimport * as actions from \"./actions\"\n\nclass GamesSDK {\n\tconstructor(private emmiter: EmmiterInterface) {}\n\n\tasync authorize(): Promise<UserID> {\n\t\tconst action = await this.emmiter.request(actions.authorize())\n\n\t\treturn action.payload\n\t}\n\n\tasync requestEmail(): Promise<UserEmail> {\n\t\tconst action = await this.emmiter.request(actions.requestEmail())\n\n\t\treturn action.payload\n\t}\n\n\tasync purchase(sku: PostID): Promise<void> {\n\t\tawait this.emmiter.send(actions.purchase(sku))\n\t}\n\n\tasync checkPurchases(skus: Array<PostID>): Promise<any> {\n\t\tconst action = await this.emmiter.request(actions.checkPurchases(skus))\n\n\t\treturn action.payload\n\t}\n}\n\nexport default GamesSDK\n","import IframeEmmiter from \"./IframeEmmiter\"\nimport GamesSDK from \"./GamesSDK\"\n\nexport { IframeActionKind, IframeAction } from \"./actions\"\nexport * as actions from \"./actions\"\n\nconst emmiter = new IframeEmmiter(window.parent)\n\nexport default new GamesSDK(emmiter)\n"],"names":["IframeEmmiter","constructor","target","window","addEventListener","this","response","bind","event","action","data","requests","type","hasError","error","forEach","resolve","reject","send","postMessage","request","Promise","push","IframeActionKind","authorize","Authorize","requestEmail","RequestEmail","purchase","sku","Purchase","payload","checkPurchases","skus","CheckPurchases","GamesSDK","emmiter","actions","parent"],"mappings":"qNAWA,MAAMA,EAILC,YAAYC,iBAFqB,QAG3BA,OAASA,EACdC,OAAOC,iBAAiB,UAAWC,KAAKC,SAASC,KAAKF,OAG/CC,SAASE,SACVC,EAAuBD,EAAME,KAC7BC,EAAWN,KAAKM,SAASF,EAAOG,SAElCD,EAAU,OACPE,EAAWJ,MAAAA,SAAAA,EAAQK,MAGzBH,EAASI,QAAQ,EAAGC,QAAAA,EAASC,OAAAA,MACxBJ,EACHI,EAAOR,EAAOK,OAEdE,EAAQP,UAILE,SAASF,EAAOG,MAAQ,IAI/BM,KAAKT,QACCP,OAAOiB,YAAYV,EAAQ,KAGjCW,QAAQX,UACA,IAAIY,QAAQ,CAACL,EAASC,KACvBZ,KAAKM,SAASF,EAAOG,aACpBD,SAASF,EAAOG,MAAQ,SAIzBD,SAASF,EAAOG,MAAMU,KAAK,CAAEN,QAAAA,EAASC,OAAAA,SACtCC,KAAKT,MClDb,IAAYc,GAAAA,EAAAA,qBAAAA,uDAEXA,uCACAA,+BACAA,2CASM,MAAMC,EAAY,MACxBZ,KAAMW,mBAAiBE,YAGXC,EAAe,MAC3Bd,KAAMW,mBAAiBI,eAGXC,EAAYC,KACxBjB,KAAMW,mBAAiBO,SACvBC,QAASF,IAGGG,EAAkBC,KAC9BrB,KAAMW,mBAAiBW,eACvBH,QAASE,0IC1BJE,EACLlC,YAAoBmC,gBAAAA,EAEdZ,uCACgBnB,KAAK+B,QAAQhB,QAAQiB,qBAApC5B,UAECA,EAAOsB,8CAGTL,0CACgBrB,KAAK+B,QAAQhB,QAAQiB,qBAApC5B,UAECA,EAAOsB,8CAGTH,SAASC,8BACRxB,KAAK+B,QAAQlB,KAAKmB,EAAiBR,6DAGpCG,eAAeC,8BACC5B,KAAK+B,QAAQhB,QAAQiB,EAAuBJ,oBAA3DxB,UAECA,EAAOsB,qDClBD,IAAII,EAFH,IAAInC,EAAcG,OAAOmC"}