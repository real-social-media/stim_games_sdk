{"version":3,"file":"games-sdk.umd.production.min.js","sources":["../src/IframeEmmiter.ts","../src/types.ts","../src/actions.ts","../src/GamesSDK.ts","../src/index.ts"],"sourcesContent":["import { IframeAction } from \"./types\"\n\nexport interface EmmiterInterface {\n\tsend(action: IframeAction): void\n\trequest(action: IframeAction): Promise<IframeAction | never>\n}\n\ntype PromisedAction = {\n\tresolve(action: IframeAction): void\n\treject(error: string): void\n}\n\ntype PromiseQueue = {\n\t[key: string]: Array<PromisedAction>\n}\n\nclass IframeEmmiter implements EmmiterInterface {\n\tprivate target: Window\n\tprivate requests: PromiseQueue = {}\n\n\tconstructor(target: Window) {\n\t\tthis.target = target\n\t\twindow.addEventListener(\"message\", this.response.bind(this))\n\t}\n\n\tprivate response(event: MessageEvent) {\n\t\tconst action: IframeAction = event.data\n\t\tconst requests = this.requests[action.type]\n\n\t\tif (requests) {\n\t\t\trequests.forEach(({ resolve, reject }) => {\n\t\t\t\tif (action?.error) {\n\t\t\t\t\treject(action.error)\n\t\t\t\t} else {\n\t\t\t\t\tresolve(action)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis.requests[action.type] = []\n\t\t}\n\t}\n\n\tsend(action: IframeAction): void {\n\t\tthis.target.postMessage(action, \"*\")\n\t}\n\n\trequest(action: IframeAction): Promise<IframeAction | never> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (!this.requests[action.type]) {\n\t\t\t\tthis.requests[action.type] = []\n\t\t\t}\n\n\t\t\tthis.requests[action.type].push({ resolve, reject })\n\t\t\tthis.send(action)\n\t\t})\n\t}\n}\n\nexport default IframeEmmiter\n","export type UserID = string\nexport type UserEmail = string\nexport type PostID = string\n\nexport enum IframeActionKind {\n\tAuthorize = \"@gameSDK:authorize\",\n\tRequestEmail = \"@gameSDK:requestEmail\",\n\tPurchase = \"@gameSDK:purchase\",\n\tCheckPurchases = \"@gameSDK:checkPurchases\",\n}\n\nexport type IframeAction = {\n\ttype: string\n\tpayload?: any\n\terror?: string\n}\n","import { PostID, IframeActionKind, IframeAction } from \"./types\"\n\nexport const authorize = (): IframeAction => ({\n\ttype: IframeActionKind.Authorize,\n})\n\nexport const requestEmail = (): IframeAction => ({\n\ttype: IframeActionKind.RequestEmail,\n})\n\nexport const purchase = (sku: PostID): IframeAction => ({\n\ttype: IframeActionKind.Purchase,\n\tpayload: sku,\n})\n\nexport const checkPurchases = (skus: Array<PostID>): IframeAction => ({\n\ttype: IframeActionKind.CheckPurchases,\n\tpayload: skus,\n})\n","import { EmmiterInterface } from \"./IframeEmmiter\"\nimport { UserID, UserEmail, PostID } from \"./types\"\nimport * as actions from \"./actions\"\n\nclass GamesSDK {\n\tconstructor(private emmiter: EmmiterInterface) {}\n\n\tasync authorize(): Promise<UserID> {\n\t\tconst action = await this.emmiter.request(actions.authorize())\n\n\t\treturn action.payload\n\t}\n\n\tasync requestEmail(): Promise<UserEmail> {\n\t\tconst action = await this.emmiter.request(actions.requestEmail())\n\n\t\treturn action.payload\n\t}\n\n\tasync purchase(sku: PostID): Promise<void> {\n\t\tawait this.emmiter.send(actions.purchase(sku))\n\t}\n\n\tasync checkPurchases(skus: Array<PostID>): Promise<any> {\n\t\tconst action = await this.emmiter.request(actions.checkPurchases(skus))\n\n\t\treturn action.payload\n\t}\n}\n\nexport default GamesSDK\n","import IframeEmmiter from \"./IframeEmmiter\"\nimport GamesSDK from \"./GamesSDK\"\nimport * as actions from \"./actions\"\n\nexport { IframeActionKind, IframeAction } from \"./types\"\nexport { actions }\n\nconst emmiter = new IframeEmmiter(window.parent)\n\nexport default new GamesSDK(emmiter)\n"],"names":["IframeEmmiter","constructor","target","window","addEventListener","this","response","bind","event","action","data","requests","type","forEach","resolve","reject","error","send","postMessage","request","Promise","push","IframeActionKind","authorize","Authorize","requestEmail","RequestEmail","purchase","sku","Purchase","payload","checkPurchases","skus","CheckPurchases","GamesSDK","emmiter","actions","parent"],"mappings":"0MAgBA,MAAMA,EAILC,YAAYC,iBAFqB,QAG3BA,OAASA,EACdC,OAAOC,iBAAiB,UAAWC,KAAKC,SAASC,KAAKF,OAG/CC,SAASE,SACVC,EAAuBD,EAAME,KAC7BC,EAAWN,KAAKM,SAASF,EAAOG,MAElCD,IACHA,EAASE,QAAQ,EAAGC,QAAAA,EAASC,OAAAA,YACxBN,GAAAA,EAAQO,MACXD,EAAON,EAAOO,OAEdF,EAAQL,UAILE,SAASF,EAAOG,MAAQ,IAI/BK,KAAKR,QACCP,OAAOgB,YAAYT,EAAQ,KAGjCU,QAAQV,UACA,IAAIW,QAAQ,CAACN,EAASC,KACvBV,KAAKM,SAASF,EAAOG,aACpBD,SAASF,EAAOG,MAAQ,SAGzBD,SAASF,EAAOG,MAAMS,KAAK,CAAEP,QAAAA,EAASC,OAAAA,SACtCE,KAAKR,MCjDb,IAAYa,GAAAA,EAAAA,qBAAAA,uDAEXA,uCACAA,+BACAA,iDCNYC,EAAY,MACxBX,KAAMU,mBAAiBE,YAGXC,EAAe,MAC3Bb,KAAMU,mBAAiBI,eAGXC,EAAYC,KACxBhB,KAAMU,mBAAiBO,SACvBC,QAASF,IAGGG,EAAkBC,KAC9BpB,KAAMU,mBAAiBW,eACvBH,QAASE,wFCbJE,EACLjC,YAAoBkC,gBAAAA,iCAGE9B,KAAK8B,QAAQhB,QAAQiB,MAE5BN,0CAIOzB,KAAK8B,QAAQhB,QAAQiB,MAE5BN,uBAGAF,SACRvB,KAAK8B,QAAQlB,KAAKmB,EAAiBR,yBAGrBI,gBACC3B,KAAK8B,QAAQhB,QAAQiB,EAAuBJ,KAEnDF,eCjBD,IAAII,EAFH,IAAIlC,EAAcG,OAAOkC"}